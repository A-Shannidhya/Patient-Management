plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.ankit'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'com.h2database:h2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'

}

tasks.named('test') {
    useJUnitPlatform()
}

apply plugin: 'java'

tasks.register('addCopyrightToFiles') {
    doLast {
        def year = new Date().format('yyyy')  // Get the current year
        def date = new Date().format('MMMM dd, yyyy')  // Get the current date
        def time = new Date().format('hh:mm a')  // Get the current time
        def user = System.getProperty('user.name')  // Get the current user

        // Define the directory where your source files are located
        def sourceDir = file('src/main/java/com/ankit/patientservice/Controller')

        // Iterate through all files in the source directory
        sourceDir.eachFile { file ->
            if (file.name.endsWith('.java')) {
                def content = file.text

                // Define the copyright header template
                def header = """/*
 *
 *  * Copyright (c) $year Ayshi Shannidhya Panda
 *  * File: ${file.name}
 *  * Author: $user
 *  * Created on: $date at $time
 *
 *
 */
"""
                // Add the header to the beginning of the file if it's not already there
                if (!content.startsWith('/* Copyright')) {
                    content = header + content
                    file.write(content)  // Write the updated content back to the file
                    println "Updated file: ${file.name}"
                }
            }
        }
    }
}

/*
 *
 *  * Copyright (c) ${YEAR} Ayshi Shannidhya Panda
 *  * File: ${NAME}
 *  * Author: ${USER}
 *  * Created on: ${DATE} at ${TIME}
 *
 *
 */

// Hook the task into the build process (optional)
compileJava.dependsOn addCopyrightToFiles

