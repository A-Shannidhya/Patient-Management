/*
 * Copyright (c) 2025 Ayshi Shannidhya Panda. All rights reserved.
 *
 * This source code is confidential and intended solely for internal use.
 * Unauthorized copying, modification, distribution, or disclosure of this
 * file, via any medium, is strictly prohibited.
 *
 * Project: Patient Management
 * Author: Ayshi Shannidhya Panda
 * Created on: 2025-6-7
 */

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.google.protobuf' version '0.9.4'
}

group = 'com.ankit'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot core starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-logging'

    // gRPC & Protobuf core
    implementation 'io.grpc:grpc-netty-shaded:1.61.0'
    implementation 'io.grpc:grpc-protobuf:1.61.0'
    implementation 'io.grpc:grpc-stub:1.61.0'
    implementation 'com.google.protobuf:protobuf-java:3.25.3'

    // gRPC Spring Boot integration (includes both client and server)
    implementation 'net.devh:grpc-spring-boot-starter:2.15.0.RELEASE'

    // PostgreSQL JDBC driver
    implementation 'org.postgresql:postgresql:42.5.0'

    // Jakarta annotations for Java 21+
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.grpc:grpc-testing:1.61.0'

    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    implementation 'net.devh:grpc-spring-boot-starter:2.15.0.RELEASE'
    implementation 'io.grpc:grpc-netty-shaded:1.50.2'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.3"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.61.0"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {}
            }
            task.plugins {
                grpc {}
            }
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

springBoot {
    mainClass = 'com.ankit.billingservice.BillingServiceApplication'
}
